/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.95
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
define(["./Transforms-3f580a0c","./Matrix2-5bde29de","./RuntimeError-d45af186","./defaultValue-ac2201bb","./ComponentDatatype-164c57e1","./ArcType-5c683766","./arrayRemoveDuplicates-68f14b2f","./EllipsoidGeodesic-dedaf218","./EllipsoidRhumbLine-bfb4fa95","./EncodedCartesian3-83872b10","./GeometryAttribute-f83e6129","./IntersectionTests-0d91a773","./Plane-3ad20be7","./WebMercatorProjection-5f048511","./_commonjsHelpers-3aae1032-ac53d93e","./combine-0dce9b0f","./WebGLConstants-e12cdc8a"],(function(e,t,a,n,i,r,s,o,l,c,u,C,d,p,h,g,f){"use strict";function m(a){a=n.defaultValue(a,n.defaultValue.EMPTY_OBJECT),this._ellipsoid=n.defaultValue(a.ellipsoid,t.Ellipsoid.WGS84),this._rectangle=n.defaultValue(a.rectangle,t.Rectangle.MAX_VALUE),this._projection=new e.GeographicProjection(this._ellipsoid),this._numberOfLevelZeroTilesX=n.defaultValue(a.numberOfLevelZeroTilesX,2),this._numberOfLevelZeroTilesY=n.defaultValue(a.numberOfLevelZeroTilesY,1)}Object.defineProperties(m.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),m.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},m.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},m.prototype.rectangleToNativeRectangle=function(e,r){a.Check.defined("rectangle",e);const s=i.CesiumMath.toDegrees(e.west),o=i.CesiumMath.toDegrees(e.south),l=i.CesiumMath.toDegrees(e.east),c=i.CesiumMath.toDegrees(e.north);return n.defined(r)?(r.west=s,r.south=o,r.east=l,r.north=c,r):new t.Rectangle(s,o,l,c)},m.prototype.tileXYToNativeRectangle=function(e,t,a,n){const r=this.tileXYToRectangle(e,t,a,n);return r.west=i.CesiumMath.toDegrees(r.west),r.south=i.CesiumMath.toDegrees(r.south),r.east=i.CesiumMath.toDegrees(r.east),r.north=i.CesiumMath.toDegrees(r.north),r},m.prototype.tileXYToRectangle=function(e,a,i,r){const s=this._rectangle,o=this.getNumberOfXTilesAtLevel(i),l=this.getNumberOfYTilesAtLevel(i),c=s.width/o,u=e*c+s.west,C=(e+1)*c+s.west,d=s.height/l,p=s.north-a*d,h=s.north-(a+1)*d;return n.defined(r)||(r=new t.Rectangle(u,h,C,p)),r.west=u,r.south=h,r.east=C,r.north=p,r},m.prototype.positionToTileXY=function(e,a,r){const s=this._rectangle;if(!t.Rectangle.contains(s,e))return;const o=this.getNumberOfXTilesAtLevel(a),l=this.getNumberOfYTilesAtLevel(a),c=s.width/o,u=s.height/l;let C=e.longitude;s.east<s.west&&(C+=i.CesiumMath.TWO_PI);let d=(C-s.west)/c|0;d>=o&&(d=o-1);let p=(s.north-e.latitude)/u|0;return p>=l&&(p=l-1),n.defined(r)?(r.x=d,r.y=p,r):new t.Cartesian2(d,p)};const w=new t.Cartesian3,y=new t.Cartesian3,T=new t.Cartographic,E=new t.Cartesian3,M=new t.Cartesian3,_=new e.BoundingSphere,O=new m,b=[new t.Cartographic,new t.Cartographic,new t.Cartographic,new t.Cartographic],A=new t.Cartesian2,k={};function P(e){t.Cartographic.fromRadians(e.east,e.north,0,b[0]),t.Cartographic.fromRadians(e.west,e.north,0,b[1]),t.Cartographic.fromRadians(e.east,e.south,0,b[2]),t.Cartographic.fromRadians(e.west,e.south,0,b[3]);let a=0,n=0,i=0,r=0;const s=k._terrainHeightsMaxLevel;let o;for(o=0;o<=s;++o){let e=!1;for(let t=0;t<4;++t){const a=b[t];if(O.positionToTileXY(a,o,A),0===t)i=A.x,r=A.y;else if(i!==A.x||r!==A.y){e=!0;break}}if(e)break;a=i,n=r}if(0!==o)return{x:a,y:n,level:o>s?s:o-1}}k.initialize=function(){let t=k._initPromise;return n.defined(t)||(t=e.Resource.fetchJson(e.buildModuleUrl("Assets/approximateTerrainHeights.json")).then((function(e){k._terrainHeights=e})),k._initPromise=t),t},k.getMinimumMaximumHeights=function(e,i){if(a.Check.defined("rectangle",e),!n.defined(k._terrainHeights))throw new a.DeveloperError("You must call ApproximateTerrainHeights.initialize and wait for the promise to resolve before using this function");i=n.defaultValue(i,t.Ellipsoid.WGS84);const r=P(e);let s=k._defaultMinTerrainHeight,o=k._defaultMaxTerrainHeight;if(n.defined(r)){const a=`${r.level}-${r.x}-${r.y}`,l=k._terrainHeights[a];n.defined(l)&&(s=l[0],o=l[1]),i.cartographicToCartesian(t.Rectangle.northeast(e,T),w),i.cartographicToCartesian(t.Rectangle.southwest(e,T),y),t.Cartesian3.midpoint(y,w,E);const c=i.scaleToGeodeticSurface(E,M);if(n.defined(c)){const e=t.Cartesian3.distance(E,c);s=Math.min(s,-e)}else s=k._defaultMinTerrainHeight}return s=Math.max(k._defaultMinTerrainHeight,s),{minimumTerrainHeight:s,maximumTerrainHeight:o}},k.getBoundingSphere=function(i,r){if(a.Check.defined("rectangle",i),!n.defined(k._terrainHeights))throw new a.DeveloperError("You must call ApproximateTerrainHeights.initialize and wait for the promise to resolve before using this function");r=n.defaultValue(r,t.Ellipsoid.WGS84);const s=P(i);let o=k._defaultMaxTerrainHeight;if(n.defined(s)){const e=`${s.level}-${s.x}-${s.y}`,t=k._terrainHeights[e];n.defined(t)&&(o=t[1])}const l=e.BoundingSphere.fromRectangle3D(i,r,0);return e.BoundingSphere.fromRectangle3D(i,r,o,_),e.BoundingSphere.union(l,_,l)},k._terrainHeightsMaxLevel=6,k._defaultMaxTerrainHeight=9e3,k._defaultMinTerrainHeight=-1e5,k._terrainHeights=void 0,k._initPromise=void 0,Object.defineProperties(k,{initialized:{get:function(){return n.defined(k._terrainHeights)}}});const S=[e.GeographicProjection,p.WebMercatorProjection],L=S.length,x=Math.cos(i.CesiumMath.toRadians(30)),I=Math.cos(i.CesiumMath.toRadians(150)),D=0,N=1e3;function R(e){const i=(e=n.defaultValue(e,n.defaultValue.EMPTY_OBJECT)).positions;if(!n.defined(i)||i.length<2)throw new a.DeveloperError("At least two positions are required.");if(n.defined(e.arcType)&&e.arcType!==r.ArcType.GEODESIC&&e.arcType!==r.ArcType.RHUMB)throw new a.DeveloperError("Valid options for arcType are ArcType.GEODESIC and ArcType.RHUMB.");this.width=n.defaultValue(e.width,1),this._positions=i,this.granularity=n.defaultValue(e.granularity,9999),this.loop=n.defaultValue(e.loop,!1),this.arcType=n.defaultValue(e.arcType,r.ArcType.GEODESIC),this._ellipsoid=t.Ellipsoid.WGS84,this._projectionIndex=0,this._workerName="createGroundPolylineGeometry",this._scene3DOnly=!1}Object.defineProperties(R.prototype,{packedLength:{get:function(){return 1+3*this._positions.length+1+1+1+t.Ellipsoid.packedLength+1+1}}}),R.setProjectionAndEllipsoid=function(e,t){let a=0;for(let e=0;e<L;e++)if(t instanceof S[e]){a=e;break}e._projectionIndex=a,e._ellipsoid=t.ellipsoid};const v=new t.Cartesian3,H=new t.Cartesian3,z=new t.Cartesian3;function B(e,a,n,i,r){const s=X(i,e,0,v),o=X(i,e,n,H),l=X(i,a,0,z),c=U(o,s,H),u=U(l,s,z);return t.Cartesian3.cross(u,c,r),t.Cartesian3.normalize(r,r)}const j=new t.Cartographic,G=new t.Cartesian3,V=new t.Cartesian3,Y=new t.Cartesian3;function q(e,a,n,i,s,c,u,C,d,p,h){if(0===s)return;let g;c===r.ArcType.GEODESIC?g=new o.EllipsoidGeodesic(e,a,u):c===r.ArcType.RHUMB&&(g=new l.EllipsoidRhumbLine(e,a,u));const f=g.surfaceDistance;if(f<s)return;const m=B(e,a,i,u,Y),w=Math.ceil(f/s),y=f/w;let T=y;const E=w-1;let M=C.length;for(let e=0;e<E;e++){const e=g.interpolateUsingSurfaceDistance(T,j),a=X(u,e,n,G),r=X(u,e,i,V);t.Cartesian3.pack(m,C,M),t.Cartesian3.pack(a,d,M),t.Cartesian3.pack(r,p,M),h.push(e.latitude),h.push(e.longitude),M+=3,T+=y}}const F=new t.Cartographic;function X(e,a,n,i){return t.Cartographic.clone(a,F),F.height=n,t.Cartographic.toCartesian(F,e,i)}function U(e,a,n){return t.Cartesian3.subtract(e,a,n),t.Cartesian3.normalize(n,n),n}function W(e,a,n,i){return i=U(e,a,i),i=t.Cartesian3.cross(i,n,i),i=t.Cartesian3.normalize(i,i),i=t.Cartesian3.cross(n,i,i)}R.pack=function(e,i,r){a.Check.typeOf.object("value",e),a.Check.defined("array",i);let s=n.defaultValue(r,0);const o=e._positions,l=o.length;i[s++]=l;for(let e=0;e<l;++e){const a=o[e];t.Cartesian3.pack(a,i,s),s+=3}return i[s++]=e.granularity,i[s++]=e.loop?1:0,i[s++]=e.arcType,t.Ellipsoid.pack(e._ellipsoid,i,s),s+=t.Ellipsoid.packedLength,i[s++]=e._projectionIndex,i[s++]=e._scene3DOnly?1:0,i},R.unpack=function(e,i,r){a.Check.defined("array",e);let s=n.defaultValue(i,0);const o=e[s++],l=new Array(o);for(let a=0;a<o;a++)l[a]=t.Cartesian3.unpack(e,s),s+=3;const c=e[s++],u=1===e[s++],C=e[s++],d=t.Ellipsoid.unpack(e,s);s+=t.Ellipsoid.packedLength;const p=e[s++],h=1===e[s++];return n.defined(r)||(r=new R({positions:l})),r._positions=l,r.granularity=c,r.loop=u,r.arcType=C,r._ellipsoid=d,r._projectionIndex=p,r._scene3DOnly=h,r};const Z=new t.Cartesian3,$=new t.Cartesian3,J=new t.Cartesian3,Q=new t.Cartesian3;function K(e,a,n,r,s){const o=U(n,a,Q),l=W(e,a,o,Z),c=W(r,a,o,$);if(i.CesiumMath.equalsEpsilon(t.Cartesian3.dot(l,c),-1,i.CesiumMath.EPSILON5))return s=t.Cartesian3.cross(o,l,s),s=t.Cartesian3.normalize(s,s);s=t.Cartesian3.add(c,l,s),s=t.Cartesian3.normalize(s,s);const u=t.Cartesian3.cross(o,s,J);return t.Cartesian3.dot(c,u)<0&&(s=t.Cartesian3.negate(s,s)),s}const ee=d.Plane.fromPointNormal(t.Cartesian3.ZERO,t.Cartesian3.UNIT_Y),te=new t.Cartesian3,ae=new t.Cartesian3,ne=new t.Cartesian3,ie=new t.Cartesian3,re=new t.Cartesian3,se=new t.Cartesian3,oe=new t.Cartographic,le=new t.Cartographic,ce=new t.Cartographic;R.createGeometry=function(a){const o=!a._scene3DOnly;let d=a.loop;const p=a._ellipsoid,h=a.granularity,g=a.arcType,f=new S[a._projectionIndex](p),m=D,w=N;let y,T;const E=a._positions,M=E.length;let _,O,b,A;2===M&&(d=!1);const P=new l.EllipsoidRhumbLine(void 0,void 0,p);let L,I,R;const v=[E[0]];for(T=0;T<M-1;T++)_=E[T],O=E[T+1],L=C.IntersectionTests.lineSegmentPlane(_,O,ee,se),!n.defined(L)||t.Cartesian3.equalsEpsilon(L,_,i.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(L,O,i.CesiumMath.EPSILON7)||(a.arcType===r.ArcType.GEODESIC?v.push(t.Cartesian3.clone(L)):a.arcType===r.ArcType.RHUMB&&(R=p.cartesianToCartographic(L,oe).longitude,b=p.cartesianToCartographic(_,oe),A=p.cartesianToCartographic(O,le),P.setEndPoints(b,A),I=P.findIntersectionWithLongitude(R,ce),L=p.cartographicToCartesian(I,se),!n.defined(L)||t.Cartesian3.equalsEpsilon(L,_,i.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(L,O,i.CesiumMath.EPSILON7)||v.push(t.Cartesian3.clone(L)))),v.push(O);d&&(_=E[M-1],O=E[0],L=C.IntersectionTests.lineSegmentPlane(_,O,ee,se),!n.defined(L)||t.Cartesian3.equalsEpsilon(L,_,i.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(L,O,i.CesiumMath.EPSILON7)||(a.arcType===r.ArcType.GEODESIC?v.push(t.Cartesian3.clone(L)):a.arcType===r.ArcType.RHUMB&&(R=p.cartesianToCartographic(L,oe).longitude,b=p.cartesianToCartographic(_,oe),A=p.cartesianToCartographic(O,le),P.setEndPoints(b,A),I=P.findIntersectionWithLongitude(R,ce),L=p.cartographicToCartesian(I,se),!n.defined(L)||t.Cartesian3.equalsEpsilon(L,_,i.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(L,O,i.CesiumMath.EPSILON7)||v.push(t.Cartesian3.clone(L)))));let H=v.length,z=new Array(H);for(T=0;T<H;T++){const e=t.Cartographic.fromCartesian(v[T],p);e.height=0,z[T]=e}if(z=s.arrayRemoveDuplicates(z,t.Cartographic.equalsEpsilon),H=z.length,H<2)return;const j=[],G=[],V=[],Y=[];let F=te,W=ae,Z=ne,$=ie,J=re;const Q=z[0],ue=z[1];for(F=X(p,z[H-1],m,F),$=X(p,ue,m,$),W=X(p,Q,m,W),Z=X(p,Q,w,Z),J=d?K(F,W,Z,$,J):B(Q,ue,w,p,J),t.Cartesian3.pack(J,G,0),t.Cartesian3.pack(W,V,0),t.Cartesian3.pack(Z,Y,0),j.push(Q.latitude),j.push(Q.longitude),q(Q,ue,m,w,h,g,p,G,V,Y,j),T=1;T<H-1;++T){F=t.Cartesian3.clone(W,F),W=t.Cartesian3.clone($,W);const e=z[T];X(p,e,w,Z),X(p,z[T+1],m,$),K(F,W,Z,$,J),y=G.length,t.Cartesian3.pack(J,G,y),t.Cartesian3.pack(W,V,y),t.Cartesian3.pack(Z,Y,y),j.push(e.latitude),j.push(e.longitude),q(z[T],z[T+1],m,w,h,g,p,G,V,Y,j)}const Ce=z[H-1],de=z[H-2];if(W=X(p,Ce,m,W),Z=X(p,Ce,w,Z),d){const e=z[0];F=X(p,de,m,F),$=X(p,e,m,$),J=K(F,W,Z,$,J)}else J=B(de,Ce,w,p,J);if(y=G.length,t.Cartesian3.pack(J,G,y),t.Cartesian3.pack(W,V,y),t.Cartesian3.pack(Z,Y,y),j.push(Ce.latitude),j.push(Ce.longitude),d){for(q(Ce,Q,m,w,h,g,p,G,V,Y,j),y=G.length,T=0;T<3;++T)G[y+T]=G[T],V[y+T]=V[T],Y[y+T]=Y[T];j.push(Q.latitude),j.push(Q.longitude)}return function(a,n,r,s,o,l,C){let d,p;const h=n._ellipsoid,g=r.length/3-1,f=8*g,m=4*f,w=36*g,y=f>65535?new Uint32Array(w):new Uint16Array(w),T=new Float64Array(3*f),E=new Float32Array(m),M=new Float32Array(m),_=new Float32Array(m),O=new Float32Array(m),b=new Float32Array(m);let A,P,S,L;C&&(A=new Float32Array(m),P=new Float32Array(m),S=new Float32Array(m),L=new Float32Array(2*f));const I=l.length/2;let D=0;const N=Oe;N.height=0;const R=be;R.height=0;let v=Ae,H=ke;if(C)for(p=0,d=1;d<I;d++)N.latitude=l[p],N.longitude=l[p+1],R.latitude=l[p+2],R.longitude=l[p+3],v=n.project(N,v),H=n.project(R,H),D+=t.Cartesian3.distance(v,H),p+=2;const z=s.length/3;H=t.Cartesian3.unpack(s,0,H);let B,j=0;for(p=3,d=1;d<z;d++)v=t.Cartesian3.clone(H,v),H=t.Cartesian3.unpack(s,p,H),j+=t.Cartesian3.distance(v,H),p+=3;p=3;let G=0,V=0,Y=0,q=0,F=!1,X=t.Cartesian3.unpack(r,0,Se),W=t.Cartesian3.unpack(s,0,ke),Z=t.Cartesian3.unpack(o,0,xe);if(a){pe(Z,t.Cartesian3.unpack(r,r.length-6,Pe),X,W)&&(Z=t.Cartesian3.negate(Z,Z))}let $=0,J=0,Q=0;for(d=0;d<g;d++){const e=t.Cartesian3.clone(X,Pe),a=t.Cartesian3.clone(W,Ae);let u,d,g,f,m=t.Cartesian3.clone(Z,Le);if(F&&(m=t.Cartesian3.negate(m,m)),X=t.Cartesian3.unpack(r,p,Se),W=t.Cartesian3.unpack(s,p,ke),Z=t.Cartesian3.unpack(o,p,xe),F=pe(Z,e,X,W),N.latitude=l[G],N.longitude=l[G+1],R.latitude=l[G+2],R.longitude=l[G+3],C){const e=_e(N,R);u=n.project(N,ze),d=n.project(R,Be);const a=U(d,u,$e);a.y=Math.abs(a.y),g=je,f=Ge,0===e||t.Cartesian3.dot(a,t.Cartesian3.UNIT_Y)>x?(g=me(n,N,m,u,je),f=me(n,R,Z,d,Ge)):1===e?(f=me(n,R,Z,d,Ge),g.x=0,g.y=i.CesiumMath.sign(N.longitude-Math.abs(R.longitude)),g.z=0):(g=me(n,N,m,u,je),f.x=0,f.y=i.CesiumMath.sign(N.longitude-R.longitude),f.z=0)}const w=t.Cartesian3.distance(a,W),y=c.EncodedCartesian3.fromCartesian(e,We),I=t.Cartesian3.subtract(X,e,Ve),v=t.Cartesian3.normalize(I,Fe);let H=t.Cartesian3.subtract(a,e,Ye);H=t.Cartesian3.normalize(H,H);let z=t.Cartesian3.cross(v,H,Fe);z=t.Cartesian3.normalize(z,z);let K=t.Cartesian3.cross(H,m,Xe);K=t.Cartesian3.normalize(K,K);let ee=t.Cartesian3.subtract(W,X,qe);ee=t.Cartesian3.normalize(ee,ee);let te=t.Cartesian3.cross(Z,ee,Ue);te=t.Cartesian3.normalize(te,te);const ae=w/j,ne=$/j;let ie,re,se,oe=0,le=0,ce=0;if(C){oe=t.Cartesian3.distance(u,d),ie=c.EncodedCartesian3.fromCartesian(u,Ze),re=t.Cartesian3.subtract(d,u,$e),se=t.Cartesian3.normalize(re,Je);const e=se.x;se.x=se.y,se.y=-e,le=oe/D,ce=J/D}for(B=0;B<8;B++){const e=q+4*B,a=V+2*B,n=e+3,i=B<4?1:-1,r=2===B||3===B||6===B||7===B?1:-1;t.Cartesian3.pack(y.high,E,e),E[n]=I.x,t.Cartesian3.pack(y.low,M,e),M[n]=I.y,t.Cartesian3.pack(K,_,e),_[n]=I.z,t.Cartesian3.pack(te,O,e),O[n]=ae*i,t.Cartesian3.pack(z,b,e);let s=ne*r;0===s&&r<0&&(s=9),b[n]=s,C&&(A[e]=ie.high.x,A[e+1]=ie.high.y,A[e+2]=ie.low.x,A[e+3]=ie.low.y,S[e]=-g.y,S[e+1]=g.x,S[e+2]=f.y,S[e+3]=-f.x,P[e]=re.x,P[e+1]=re.y,P[e+2]=se.x,P[e+3]=se.y,L[a]=le*i,s=ce*r,0===s&&r<0&&(s=9),L[a+1]=s)}const ue=ve,Ce=He,de=Ne,he=Re,ge=t.Rectangle.fromCartographicArray(Ie,De),fe=k.getMinimumMaximumHeights(ge,h),we=fe.minimumTerrainHeight,ye=fe.maximumTerrainHeight;Q+=we,Q+=ye,Te(e,a,we,ye,ue,de),Te(X,W,we,ye,Ce,he);let Ee=t.Cartesian3.multiplyByScalar(z,i.CesiumMath.EPSILON5,Qe);t.Cartesian3.add(ue,Ee,ue),t.Cartesian3.add(Ce,Ee,Ce),t.Cartesian3.add(de,Ee,de),t.Cartesian3.add(he,Ee,he),Me(ue,Ce),Me(de,he),t.Cartesian3.pack(ue,T,Y),t.Cartesian3.pack(Ce,T,Y+3),t.Cartesian3.pack(he,T,Y+6),t.Cartesian3.pack(de,T,Y+9),Ee=t.Cartesian3.multiplyByScalar(z,-2*i.CesiumMath.EPSILON5,Qe),t.Cartesian3.add(ue,Ee,ue),t.Cartesian3.add(Ce,Ee,Ce),t.Cartesian3.add(de,Ee,de),t.Cartesian3.add(he,Ee,he),Me(ue,Ce),Me(de,he),t.Cartesian3.pack(ue,T,Y+12),t.Cartesian3.pack(Ce,T,Y+15),t.Cartesian3.pack(he,T,Y+18),t.Cartesian3.pack(de,T,Y+21),G+=2,p+=3,V+=16,Y+=24,q+=32,$+=w,J+=oe}p=0;let K=0;for(d=0;d<g;d++){for(B=0;B<tt;B++)y[p+B]=et[B]+K;K+=8,p+=tt}const ee=Ke;e.BoundingSphere.fromVertices(r,t.Cartesian3.ZERO,3,ee[0]),e.BoundingSphere.fromVertices(s,t.Cartesian3.ZERO,3,ee[1]);const te=e.BoundingSphere.fromBoundingSpheres(ee);te.radius+=Q/(2*g);const ae={position:new u.GeometryAttribute({componentDatatype:i.ComponentDatatype.DOUBLE,componentsPerAttribute:3,normalize:!1,values:T}),startHiAndForwardOffsetX:at(E),startLoAndForwardOffsetY:at(M),startNormalAndForwardOffsetZ:at(_),endNormalAndTextureCoordinateNormalizationX:at(O),rightNormalAndTextureCoordinateNormalizationY:at(b)};C&&(ae.startHiLo2D=at(A),ae.offsetAndRight2D=at(P),ae.startEndNormals2D=at(S),ae.texcoordNormalization2D=new u.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:2,normalize:!1,values:L}));return new u.Geometry({attributes:ae,indices:y,boundingSphere:te})}(d,f,V,Y,G,j,o)};const ue=new t.Cartesian3,Ce=new t.Matrix3,de=new e.Quaternion;function pe(a,n,r,s){const o=U(r,n,ue),l=t.Cartesian3.dot(o,a);if(l>x||l<I){const n=U(s,r,Q),o=l<I?i.CesiumMath.PI_OVER_TWO:-i.CesiumMath.PI_OVER_TWO,c=e.Quaternion.fromAxisAngle(n,o,de),u=t.Matrix3.fromQuaternion(c,Ce);return t.Matrix3.multiplyByVector(u,a,a),!0}return!1}const he=new t.Cartographic,ge=new t.Cartesian3,fe=new t.Cartesian3;function me(e,a,n,r,s){const o=t.Cartographic.toCartesian(a,e._ellipsoid,ge);let l=t.Cartesian3.add(o,n,fe),c=!1;const u=e._ellipsoid;let C=u.cartesianToCartographic(l,he);Math.abs(a.longitude-C.longitude)>i.CesiumMath.PI_OVER_TWO&&(c=!0,l=t.Cartesian3.subtract(o,n,fe),C=u.cartesianToCartographic(l,he)),C.height=0;const d=e.project(C,s);return(s=t.Cartesian3.subtract(d,r,s)).z=0,s=t.Cartesian3.normalize(s,s),c&&t.Cartesian3.negate(s,s),s}const we=new t.Cartesian3,ye=new t.Cartesian3;function Te(e,a,n,i,r,s){const o=t.Cartesian3.subtract(a,e,we);t.Cartesian3.normalize(o,o);const l=n-D;let c=t.Cartesian3.multiplyByScalar(o,l,ye);t.Cartesian3.add(e,c,r);const u=i-N;c=t.Cartesian3.multiplyByScalar(o,u,ye),t.Cartesian3.add(a,c,s)}const Ee=new t.Cartesian3;function Me(e,a){const n=d.Plane.getPointDistance(ee,e),r=d.Plane.getPointDistance(ee,a);let s=Ee;i.CesiumMath.equalsEpsilon(n,0,i.CesiumMath.EPSILON2)?(s=U(a,e,s),t.Cartesian3.multiplyByScalar(s,i.CesiumMath.EPSILON2,s),t.Cartesian3.add(e,s,e)):i.CesiumMath.equalsEpsilon(r,0,i.CesiumMath.EPSILON2)&&(s=U(e,a,s),t.Cartesian3.multiplyByScalar(s,i.CesiumMath.EPSILON2,s),t.Cartesian3.add(a,s,a))}function _e(e,t){const a=Math.abs(e.longitude),n=Math.abs(t.longitude);if(i.CesiumMath.equalsEpsilon(a,i.CesiumMath.PI,i.CesiumMath.EPSILON11)){const n=i.CesiumMath.sign(t.longitude);return e.longitude=n*(a-i.CesiumMath.EPSILON11),1}if(i.CesiumMath.equalsEpsilon(n,i.CesiumMath.PI,i.CesiumMath.EPSILON11)){const a=i.CesiumMath.sign(e.longitude);return t.longitude=a*(n-i.CesiumMath.EPSILON11),2}return 0}const Oe=new t.Cartographic,be=new t.Cartographic,Ae=new t.Cartesian3,ke=new t.Cartesian3,Pe=new t.Cartesian3,Se=new t.Cartesian3,Le=new t.Cartesian3,xe=new t.Cartesian3,Ie=[Oe,be],De=new t.Rectangle,Ne=new t.Cartesian3,Re=new t.Cartesian3,ve=new t.Cartesian3,He=new t.Cartesian3,ze=new t.Cartesian3,Be=new t.Cartesian3,je=new t.Cartesian3,Ge=new t.Cartesian3,Ve=new t.Cartesian3,Ye=new t.Cartesian3,qe=new t.Cartesian3,Fe=new t.Cartesian3,Xe=new t.Cartesian3,Ue=new t.Cartesian3,We=new c.EncodedCartesian3,Ze=new c.EncodedCartesian3,$e=new t.Cartesian3,Je=new t.Cartesian3,Qe=new t.Cartesian3,Ke=[new e.BoundingSphere,new e.BoundingSphere],et=[0,2,1,0,3,2,0,7,3,0,4,7,0,5,4,0,1,5,5,7,4,5,6,7,5,2,6,5,1,2,3,6,2,3,7,6],tt=et.length;function at(e){return new u.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:4,normalize:!1,values:e})}return R._projectNormal=me,function(e,t){return k.initialize().then((function(){return n.defined(t)&&(e=R.unpack(e,t)),R.createGeometry(e)}))}}));
//# sourceMappingURL=createGroundPolylineGeometry.js.map
